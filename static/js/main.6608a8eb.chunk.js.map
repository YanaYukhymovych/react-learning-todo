{"version":3,"sources":["components/Button/Button.js","components/TodoList/TodoList.js","components/TodoInput/TodoInput.js","components/Modal/Modal.js","components/ListTitle/ListTitle.js","pages/ListCreator/ListCreator.js","components/ListItem/ListItem.js","pages/MainPage/MainPage.js","App.js","index.js"],"names":["Button","props","cls","type","className","join","onClick","disabled","title","children","TodoList","list","length","map","listItem","index","done","undefined","text","onDone","icon","faCheck","onDelete","faTrashAlt","onDeleteAll","onDoneAll","TodoInput","id","value","onChange","onKeyDown","placeholder","faPlus","Modal","onCancel","ListTitle","useState","titleBeingEdited","setTitleBeingEdited","onBlur","autoFocus","faPencilAlt","style","width","ListCreator","inputValue","setInputValue","todo","todoList","setTodoList","isModalShow","setIsModalShow","addItemHandler","todoListCopy","push","toggleModalHandler","saveListHandler","event","a","axios","post","console","log","textDecoration","to","pathname","prevTodoList","target","key","splice","forEach","ListItem","preventDefault","MainPage","todoLists","setTodoLists","useEffect","get","then","response","Object","values","data","faCheckCircle","search","size","todoListsCopy","deleteListHandler","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6608a8eb.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Button.scss'\r\n\r\nconst Button = props => {\r\n  const cls = [\"Button\", [props.type]]\r\n   // создаем массив из возможных классов, что бы потом комбинировать их\r\n\r\n  return(\r\n    <button type={props.type}\r\n            className={cls.join(' ')} // обьединяем класс Button с другими\r\n            onClick={props.onClick}\r\n            disabled={props.disabled}>\r\n      {props.title || props.children || 'OK'}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport'./TodoList.scss'\r\nimport Button from '../Button/Button'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\n\r\nconst TodoList = (props) => {\r\n    return (\r\n      <div className=\"TodoList\">\r\n        \r\n\r\n        {!!props.list.length && <ul>\r\n          {/* // list = this.state.todoList   listItem = каждый элемент массива todoList*/}\r\n          {props.list.map(( listItem, index) => {\r\n            return (\r\n              <li key={index} className={listItem.done ? 'done' : undefined}>\r\n\r\n\r\n                {/* если у єлемента массива todoList есть атрибут done - добавляем строку done в класс*/}\r\n                {listItem.text}\r\n\r\n              \r\n                  {/* conditional rendering - рендер по условию  \"если - то\" */}\r\n                  <button className=\"done-btn\" onClick={() => props.onDone(index)} // если прописываем аргумент у ф-ии - всешда через колбек\r\n                  >\r\n                    {(listItem.done && <FontAwesomeIcon icon={faCheck} />)}\r\n                  </button>\r\n\r\n                  <button className=\"delete-btn\" onClick={() => props.onDelete(index)} \r\n                  >\r\n                    <FontAwesomeIcon icon={faTrashAlt} />\r\n                  </button>\r\n                \r\n              </li>\r\n            )\r\n          })}\r\n        </ul>}\r\n\r\n        <div>\r\n\r\n            {!!props.list.length && <Button type=\"secondary\"\r\n                    onClick={props.onDeleteAll}\r\n                    title={'Delete all'} />}\r\n\r\n            {!!props.list.length && <Button type=\"primary\"\r\n                    onClick={props.onDoneAll}\r\n                    title={'Done all'} />}\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default TodoList","import React from 'react'\r\nimport './TodoInput.scss'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nconst TodoInput = props => {\r\n  return(\r\n    \r\n      <div className=\"TodoInput\">\r\n        {/* <label htmlFor=\"todo\">Add new todo item:</label> */}\r\n        <input type=\"text\"\r\n              id=\"todo\"\r\n              value={props.value}\r\n              onChange={props.onChange}\r\n              onKeyDown={props.onKeyDown}\r\n              placeholder=\"Add todo\">\r\n        </input>\r\n\r\n        <button onClick={props.onClick}>\r\n          <FontAwesomeIcon icon={faPlus} />\r\n        </button>\r\n      </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default TodoInput","import React from 'react'\r\nimport './Modal.scss'\r\nimport Button from '../Button/Button'\r\n\r\nconst Modal = props => {\r\n  return(\r\n    <div className=\"Backdrop\">\r\n      <div className=\"Modal\">\r\n          <h1>Are you shure you want delete all list?</h1>\r\n\r\n          <div>\r\n            <Button type=\"secondary\"\r\n                    onClick={props.onDelete}\r\n                    title={'Delete'}\r\n            />\r\n\r\n            <Button type=\"primary\"\r\n                    onClick={props.onCancel}\r\n                    title={'Cancel'}/>\r\n          </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal","import React, { useState } from 'react'\r\nimport './ListTitle.scss'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst ListTitle = props => {\r\n\r\n  const [titleBeingEdited, setTitleBeingEdited] = useState(true);\r\n\r\n  const onBlurHandler = () => {\r\n    if (props.value) {\r\n      setTitleBeingEdited(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n\r\n    <h1 className=\"ListTitle\"\r\n        onClick={() => setTitleBeingEdited(true)}>\r\n        {titleBeingEdited\r\n          ? <input type=\"text\"\r\n            id=\"TitleInput\"\r\n            value={props.value}\r\n            placeholder=\"Enter list name\"\r\n            onChange={props.onChange}\r\n            onBlur={onBlurHandler}\r\n            autoFocus={true}\r\n            />\r\n          : <div>\r\n              {props.value}\r\n              <FontAwesomeIcon icon={faPencilAlt} style={{ width: '15px' }} />\r\n            </div>\r\n        }\r\n    </h1>\r\n  )\r\n}\r\n\r\nexport default ListTitle","import React, { useState } from 'react'\r\nimport './ListCreator.scss'\r\nimport TodoList from '../../components/TodoList/TodoList'\r\nimport TodoInput from '../../components/TodoInput/TodoInput'\r\nimport Button from '../../components/Button/Button'\r\nimport Modal from '../../components/Modal/Modal'\r\nimport { Link } from 'react-router-dom'\r\nimport ListTitle from '../../components/ListTitle/ListTitle'\r\nimport axios from 'axios'\r\n\r\n\r\nconst ListCreator = () => {\r\n\r\n  // использование функционального компонента через useState (hook)\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [todoList, setTodoList] = useState({\r\n    title: '', //string\r\n    todo: [] // { text: string, done: boolean }\r\n  });\r\n  const [isModalShow, setIsModalShow] = useState(false);\r\n\r\n\r\n\r\n  const createItemHandler = event => {\r\n    setInputValue(event.target.value)\r\n  }\r\n\r\n  const addItemHandler = () => {\r\n    const todoListCopy = { ...todoList }\r\n    todoListCopy.todo.push({ id: todoList.todo.length + 1, text: inputValue, done: false })\r\n\r\n    setTodoList(todoListCopy);\r\n    setInputValue('');\r\n\r\n    // альтернативній вариант\r\n    // this.setState((state) => \r\n    // ({todoList: [...state.todoList, state.inputValue],\r\n    //   inputValue: '' }))\r\n  }\r\n\r\n  const keyDownHandler = (event) => {\r\n    if (event.key === 'Enter') {\r\n      addItemHandler()\r\n    }\r\n  }\r\n\r\n\r\n  const deleteItemHandler = index => {\r\n    const todoListCopy = { ...todoList }\r\n    todoListCopy.todo.splice(index, 1)\r\n\r\n    setTodoList(todoListCopy)\r\n  }\r\n\r\n  const checkItemHandler = (index) => {\r\n    const todoListCopy = { ...todoList }\r\n    todoListCopy.todo[index].done = !todoListCopy.todo[index].done\r\n\r\n    setTodoList(todoListCopy)\r\n  }\r\n\r\n  const toggleModalHandler = () => {\r\n    setIsModalShow(!isModalShow)\r\n  }\r\n\r\n  const deleteAllHandler = () => {\r\n    setTodoList(prevTodoList => ({ ...prevTodoList, todo: [] }));\r\n    setIsModalShow(false)\r\n  }\r\n\r\n  //перебирираем массив списка\r\n  //  аргументом map являются каждый элемент масива который мы перебираем\r\n  // после разворачиваем (делаем копию) изменяемого элемента и прсваиваем нвое значение\r\n  const doneAllHandler = () => {\r\n    const todoListCopy = { ...todoList }\r\n    todoListCopy.todo.forEach(listItem => (listItem.done = true));\r\n    console.log(todoListCopy)\r\n\r\n    setTodoList(todoListCopy)\r\n  }\r\n \r\n\r\n\r\n  const changeTitleHandler = event => {\r\n    setTodoList(prevTodoList => ({ ...prevTodoList, title: event.target.value }))\r\n  }\r\n\r\n  const saveListHandler = async event => {\r\n\r\n    try {\r\n      await axios.post('https://todo-1239d.firebaseio.com/todo.json', todoList)\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"ListCreator\">\r\n\r\n      <div className=\"navigation\">\r\n        <Link style={{ textDecoration: 'none' }}\r\n          to={{\r\n            pathname: \"/\",\r\n          }}>\r\n          <Button type=\"forward\"\r\n            title={'Back to menu'} />\r\n        </Link>\r\n\r\n        <Button type=\"forward\"\r\n          onClick={saveListHandler}\r\n          disabled={todoList.length === 0}\r\n          title={'Save to my lists'}\r\n        />\r\n\r\n      </div>\r\n\r\n      \r\n        <ListTitle onChange={changeTitleHandler}\r\n                   value={todoList.title}\r\n        /> \r\n      \r\n\r\n      <div>\r\n        <TodoInput onChange={createItemHandler}\r\n                   value={inputValue}\r\n                   onKeyDown={keyDownHandler}\r\n                   onClick={addItemHandler}\r\n                   />\r\n\r\n      </div>\r\n\r\n      {isModalShow && <Modal onDelete={deleteAllHandler}\r\n        onCancel={toggleModalHandler}\r\n      />}\r\n\r\n      <TodoList list={todoList.todo} // єтот лист мі и передает в TodoList для map\r\n        onDelete={deleteItemHandler}\r\n        onDone={checkItemHandler}\r\n        onDeleteAll={toggleModalHandler}\r\n        onDoneAll={doneAllHandler} />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default ListCreator\r\n","import React from 'react'\r\nimport './ListItem.scss'\r\nimport Button from '../Button/Button'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst ListItem = props => {\r\n  const onClickHandler = event => {\r\n    event.preventDefault();\r\n    props.onDelete();\r\n  }\r\n  return (\r\n    <li className=\"ListItem\">\r\n        <Button type=\"trash\"\r\n                onClick={onClickHandler}\r\n        > \r\n          <FontAwesomeIcon icon={faTrashAlt}  />\r\n        </Button>\r\n      <h3>{props.title}</h3>\r\n      {props.children}\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default ListItem","import React, { useState, useEffect } from 'react'\r\nimport './MainPage.scss'\r\nimport ListItem from '../../components/ListItem/ListItem'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nconst MainPage = () => {\r\n\r\n  // написание функционального компонента с применением hooks\r\n\r\n  const [todoLists, setTodoLists] = useState([\r\n    {\r\n      title: '', //string\r\n      todo: []\r\n    }\r\n  ]);\r\n\r\n  const deleteListHandler = (index) => {\r\n    const todoListsCopy = [...todoLists]\r\n    todoListsCopy.splice(index, 1)\r\n\r\n    setTodoLists(todoListsCopy)\r\n  }\r\n\r\n  // альтернативніе примері использования хука useEffect\r\n\r\n  // 1. С асинхонной функцией внутри\r\n  // useEffect(() => {\r\n  //   (async () => {\r\n  //     const response = await axios.get(`https://todo-1239d.firebaseio.com/todo.json`);\r\n  //     const todo = response.data\r\n\r\n  //     setTodoLists(Object.values(todo));\r\n  //   })();\r\n  // }, []);\r\n\r\n  // 2. С обычной функцией\r\n  \r\n  useEffect(() => {\r\n    axios.get(`https://todo-1239d.firebaseio.com/todo.json`).then(response => setTodoLists(Object.values(response.data)));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"MainPage\">\r\n        \r\n      <h1>\r\n        <FontAwesomeIcon icon={faCheckCircle} />\r\n        My Todo lists\r\n      </h1>\r\n      \r\n\r\n      <div>\r\n        <ul>\r\n          <Link to={{\r\n            pathname: \"/listcreator/new\",\r\n            search: \"?create=new=list\"\r\n          }}>\r\n            <li className=\"AddList\">\r\n              <FontAwesomeIcon className=\"AddIcon\" icon={faPlus} size=\"3x\" />\r\n            </li>\r\n          </Link>\r\n\r\n          {todoLists.map((listItem, index) => {\r\n            return (\r\n              <Link to={`/listcreator/${listItem.id}`}\r\n                key={index}\r\n\r\n              >\r\n                <ListItem\r\n                  title={listItem.title}\r\n                  onDelete={() => deleteListHandler(index)}\r\n                />\r\n              </Link>\r\n            )\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default MainPage;\r\n","import React from 'react'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport './App.css'\nimport ListCreator from './pages/ListCreator/ListCreator'\nimport MainPage from './pages/MainPage/MainPage'\n\n\nexport default function App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/listcreator/:id\" component={ListCreator}/>\n\n        <Route path=\"/\" component={MainPage} />\n      </Switch>\n    </Router>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}